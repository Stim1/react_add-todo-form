{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","initializedTodos","userId","usersFromServer","find","App","useState","setTodos","selectedUser","setSelectedUser","newTodoTitle","setNewTodoTitle","userError","setUserError","titleError","setTitleError","onSubmit","event","preventDefault","hasError","newTodo","Math","max","type","value","placeholder","onChange","element","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dc329a3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user || null} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <div>\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\n\nconst initializedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer\n    .find((user: User) => user.id === todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initializedTodos);\n  const [selectedUser, setSelectedUser] = useState<number>(0);\n  const [newTodoTitle, setNewTodoTitle] = useState<string>('');\n  const [userError, setUserError] = useState<string>('');\n  const [titleError, setTitleError] = useState<string>('');\n\n  const findUserById = (id: number): User | undefined => {\n    return usersFromServer.find((user: User) => user.id === id);\n  };\n\n  const clear = () => {\n    setNewTodoTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleSelect = (element: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+element.target.value);\n    setUserError('');\n  };\n\n  const handleTitle = (element: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(element.target.value);\n    setTitleError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    let hasError = false;\n\n    if (!selectedUser || selectedUser === 0) {\n      setUserError('Please choose a user');\n      hasError = true;\n    } else {\n      setUserError('');\n    }\n\n    if (newTodoTitle === '') {\n      setTitleError('Please enter a title');\n      hasError = true;\n    } else {\n      setTitleError('');\n    }\n\n    if (hasError) {\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id), 0) + 1;\n\n    const newTodo: Todo = {\n      id: newId,\n      title: newTodoTitle,\n      userId: selectedUser,\n      completed: false,\n      user: findUserById(selectedUser),\n    };\n\n    setTodos([...todos, newTodo]);\n    clear();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={newTodoTitle}\n            placeholder=\"Enter a title\"\n            onChange={handleTitle}\n          />\n          <span className=\"error\">{titleError}</span>\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser || ''}\n            onChange={handleSelect}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map((user: User) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          <span className=\"error\">{userError}</span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}